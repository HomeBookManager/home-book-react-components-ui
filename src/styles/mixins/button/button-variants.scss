@import '../../colors/button/button-map.scss';
@import '../ripple-styles.scss';

@mixin orientation-styles($orientation, $variant, $color: '') {
  @if $variant == 'text' {
    @if $orientation == 'horizontal' {
      &:not(:last-of-type) {
        border-right: 1px solid $color;
      }
    }
  } @else if $variant == 'contained' {
    @if $orientation == 'horizontal' {
      &:not(:last-of-type) {
        border-right: 1px solid $color;
      }
    }
  } @else {
    @if $orientation == 'horizontal' {
      &:not(:last-of-type) {
        border-right-color: transparent;
      }

      &:not(:first-of-type) {
        margin-left: -1px;
      }
    }
  }
}

@mixin idle-styles($isGrouped, $orientation, $variant, $color) {
  @if $variant == 'text' and $isGrouped {
    @include orientation-styles(
      $orientation,
      $variant,
      map-get($--hb-border-map, 'outlined' + '-' + $color)
    );
  }
  @if $variant == 'contained' {
    @if $isGrouped {
      @include orientation-styles(
        $orientation,
        $variant,
        map-get($--hb-border-map, 'outlined' + '-' + $color + '-hover')
      );
    }

    background-color: map-get(
      $--hb-background-color-map,
      $variant + '-' + $color
    );
  } @else if $variant == 'outlined' {
    @if $isGrouped {
      @include orientation-styles($orientation, $variant);
    }
    border-color: map-get($--hb-border-map, $variant + '-' + $color);
  }
}

@mixin hover-styles($variant, $color) {
  @if $variant != 'outlined' {
    background-color: map-get(
      $--hb-background-color-map,
      $variant + '-' + $color + '-hover'
    );

    @if $variant == 'contained' {
      box-shadow: 0 1px 2px 0 #58585875, 0 1px 3px 1px #58585875;
    }
  } @else {
    border-color: map-get($--hb-border-map, $variant + '-' + $color + '-hover');
  }
}

@mixin disabled-styles($variant, $color) {
  @if $variant == 'contained' {
    background-color: map-get(
      $--hb-background-color-map,
      $variant + '-' + $color + '-disabled'
    );
  } @else if $variant == 'outlined' {
    border-color: map-get(
      $--hb-border-map,
      $variant + '-' + $color + '-disabled'
    );
  }
}

@mixin ripple-styles($variant, $color) {
  @if $variant == 'text' {
    @include ripple(
      map-get($--hb-text-map, $variant + '-' + $color + '-hover')
    );
  } @else if $variant == 'contained' {
    @include ripple(
      map-get($--hb-background-color-map, $variant + '-' + $color + '-hover')
    );
  } @else {
    @include ripple(
      map-get($--hb-border-map, $variant + '-' + $color + '-hover')
    );
  }
}

@mixin color-styles($isGrouped, $orientation, $variant, $color: 'primary') {
  color: map-get($--hb-text-map, $variant + '-' + $color);
  @include idle-styles($isGrouped, $orientation, $variant, $color);

  &-forced-hover,
  &:hover:enabled {
    color: map-get($--hb-text-map, $variant + '-' + $color + '-hover');
    @include hover-styles($variant, $color);
  }

  &:disabled {
    color: map-get($--hb-text-map, $variant + '-' + $color + '-disabled');
    cursor: not-allowed;
    @include disabled-styles($variant, $color);
  }

  &__ripple {
    @include ripple-styles($variant, $color);
  }
}

@mixin variant-styles($isGrouped, $orientation, $variant: 'text') {
  &--primary {
    @include color-styles($isGrouped, $orientation, $variant);
  }

  &--secondary {
    @include color-styles($isGrouped, $orientation, $variant, 'secondary');
  }

  &--success {
    @include color-styles($isGrouped, $orientation, $variant, 'success');
  }

  &--warning {
    @include color-styles($isGrouped, $orientation, $variant, 'warning');
  }

  &--error {
    @include color-styles($isGrouped, $orientation, $variant, 'error');
  }
}

@mixin button-variant($isGrouped: false, $orientation: 'horizontal') {
  &__text {
    background: unset;
    @include variant-styles($isGrouped, $orientation);
  }

  &__contained {
    @include variant-styles($isGrouped, $orientation, 'contained');
  }

  &__outlined {
    background: unset;
    border: 1px solid;
    @include variant-styles($isGrouped, $orientation, 'outlined');
  }
}
